<?php

namespace App\Livewire;

use Livewire\Component;
use App\Models\FriendRequest as FR;
use App\Models\Friend;
class FriendRequest extends Component
{
    public $receiver_id;
    public $sender_id;
    public $request_status = 'none';
    public $request_exists = false;

    public function mount($receiver_id)
    {
        $this->receiver_id = $receiver_id;
        $this->sender_id = auth()->id();
        $this->request_status = $this->checkFriendRequestStatus();
    }


    public function getRequest(){
        $req =  FR::where(function ($query) {
            $query->where('sender_id', $this->sender_id)
                  ->where('receiver_id', $this->receiver_id);
        })->orWhere(function ($query) {
            $query->where('sender_id', $this->receiver_id)
                  ->where('receiver_id', $this->sender_id);
        })->first();
        if(!$req)
            return 1;
        return $req;
    }

    public function requestExist(){
        $this->request_exists = true;
    }

    public function checkFriendRequestStatus(){
        //if req exist, sender = auth -> sent
        $request = $this->getRequest();
        // dd($request);

        if($this->request_exists && $request->sender_id === $this->sender_id ){
            return 'sent';
        }
        //if req exist, receiver = auth -> receiver
        if($this->request_exists && $request->sender_id === $this->receiver_id){
            return 'received';
        }
        return 'none';
    }

    public function sendRequest(){
        if($this->request_exists){
            session()->flash('error', 'Friend request already exists.');
            return;
        }

        FR::create([
            'sender_id' => $this->sender_id,
            'receiver_id' => $this->receiver_id,
            'status' => 'pending',
        ]);
        $this->request_status = 'sent';
        session()->flash('success', 'Friend request sent!');
    }


    public function cancelRequest(){
        if($this->request_exists){
            $request = FR::where('sender_id', $this->sender_id)
                ->where('receiver_id', $this->receiver_id)
                ->first();
            
                $request->delete();
                $this->request_status = 'none';

                session()->flash('success', 'Friend request canceled.');
            return;
        }
        session()->flash('error', 'friend request cancel failed.');
    }


    //accept
    public function acceptRequest($requestId){
        $request = FR::find('request_id');
        if($request && $request->receiver_id === auth()->id()){
            Friend::create([
                'user_id'=>$request->sender_id,
                'friend_id'=>$request->receiver_id
            ]);

            Friend::create([
                'user_id' => $request->receiver_id,
                'friend_id' => $request->sender_id,
            ]);
            $request->delete();
            session()->flash('success', 'Friend request accepted.');
        }

    }
    //reject
    public function rejectRequest($requestId){
        $request = FR::find($requestId);

        if ($request && $request->receiver_id === auth()->id()) {
            $request->delete();
            session()->flash('success', 'Friend request rejected.');
        }
    }
    //unfriend
    public function unfriend($friendId){
        Friend::where(function ($query) use ($friendId) {
            $query->where('user_id', auth()->id())
                ->where('friend_id', $friendId);
        })->orWhere(function ($query) use ($friendId) {
            $query->where('user_id', $friendId)
                ->where('friend_id', auth()->id());
        })->delete();

        session()->flash('success', 'Unfriended successfully.');
    }



    public function render()
    {
        return view('livewire.friend-request');
    }
}
